
@inproceedings{SousaAECJMRA19,
  title={REM4DSPL: A Requirements Engineering Method for Dynamic Software Product Lines},
  author={Amanda Sousa and Anderson Uchôa and Eduardo Fernandes and Carla I. M. Bezerra and José Maria Monteiro and Rossana M. C. Andrade},
  booktitle={Proceedings of the 18th Brazilian Symposium on Software Quality (SBQS)},
  pages={1--10},
  note = {<font color="red">Accepted for Publication (to appear)</font>},
  year={2019},
abstract={Context: Dynamic Software Product Line (DSPL) is a set of software products capable of self-adapt and configure in run-time. DSPL products have common features (commonalities) and varying features (managed in run-time according to context changes). Objective: DSPL requirements engineering is challenging. Requirements engineers have to carefully plan self-adaptation while eliciting, modeling, and managing variability requirements. This paper introduces a method for DSPL requirements engineering. Method: We relied on empirically-derived activities of DSPL requirements engineering to build our method. We selected techniques and templates used in other domains such as SPL for refinement and incorporation into the method. We asked DSPL experts on the method applicability. Result: We introduced the Requirements Engineering Method for DSPL (REM4DSPL). Elicitation is guided by supervised discussions. Modeling relies on feature models. Variability Management is tool-assisted and validated via feature model inspection. DSPL experts agreed on the method applicability and suggested improvements. Conclusion: REM4DSPL relies on empirically-derived activities, techniques that have been successfully used by previous work, and templates adapted to the DSPL context. We expect our method to guide requirements engineers in practice.},
publisher={ACM}
}



@inproceedings{deMelloARWJKDBA19,
  title={Do Research and Practice of Code Smell Identification Walk Together? A Social Representations Analysis},
  author={Rafael de Mello and Anderson Uchôa and Roberto Oliveira and Willian Oizumi and Jairo Souza and Kleyson Mendes and Daniel Oliveira and Baldoino Fonseca and Alessandro Garcia},
  booktitle={Proceedings of the 13th International Symposium on Empirical Software Engineering and Measurement (ESEM)},
  pages={1--6},
  note = {<font color="red">Accepted for Publication (to appear)</font>},
  year={2019},
abstract={Context: It is frequently claimed the need for bridging the gap between software engineering research and practice. In this sense, the theory of social representations may be useful to characterize the actual concerns of software developers. It comprises the system of values, behaviors, and practices of communities regarding a particular social object, such as the task of smell identification. Aim: To characterize the social representations of smell identification by software developers. Method: Based on the answers given to a questionnaire, we analyzed the associations made by the developers about smell identification, i.e., what immediately comes to their minds when they think about this task. Results: We found that developers strongly associate smell identification with the practice of smell removal and with the incidence of bugs. They also frequently associate the task with the practice of inspection and with the need of having individual skills. Besides, we verified that the current state of the art on smell identification partially address the social representations of the software developers. Conclusion: There is a considerable gap between the research of smell identification and its practice. We propose directions to mitigating this gap.},
publisher={IEEE Press},
url = {https://anderson-uchoa.github.io/publications/deMelloARWJKDBA19.pdf}
}


@inproceedings{deMelloARDWJBA2019,
  title={Investigating the Social Representations of the Identification of Code Smells by Practitioners and Students from Brazil},
  author={Rafael de Mello and Anderson Uchôa and Roberto Oliveira and Daniel Oliveira and Willian Oizumi and Jairo Souza and Baldoino Fonseca and Alessandro Garcia},
  booktitle={Proceedings of the 33nd Brazilian Symposium on Software Engineering (SBES)},
  pages={1--10},
  note = {<font color="red">Accepted for Publication (to appear)</font>},
  year={2019},
abstract={Context: The identification of code smells is one of the most subjective tasks in software engineering. A key reason is the influence of collective aspects of communities working on this task, such as their beliefs regarding the relevance of certain smells. However, collective aspects are often neglected in the context of smell identification. For this purpose, we can use the social representations theory. Social representations comprise the set of values, behaviors, and practices of communities associated with a social object, such as the task of identifying smells. Aim: To characterize the social representations behind smell identification. Method: We conducted an empirical study on the social representations of smell identification by two communities. One community is composed of postgraduate students from different Brazilian universities. The other community is composed of practitioners located in Brazilian companies, having different levels of experience in code reviews. We analyzed the associations made by the study participants about smell identification, i.e., what immediately comes to their minds when they think about this task. Results: One of the key findings is that the community of students and practitioners have stronger associations with different types of code smells. Students share a strong belief that smell identification is a matter of measurement, while practitioners focus on the structure of the source code and its semantics. Besides, we found that only practitioners frequently associate the task with individual skills. This finding suggests research directions on code smells may be revisited. Conclusion: We found evidence that social representations theory allows identifying research gaps and opportunities by looking beyond the borders of formal knowledge and individual opinions. Therefore, this theory can be considered an important resource for conducting qualitative studies in software engineering.},
publisher={ACM},
url = {https://anderson-uchoa.github.io/publications/deMelloARDWJBA19.pdf}
}



@inproceedings{FernandesAAA19,
  title={On the Alternatives for Composing Batch Refactoring},
  author={Eduardo Fernandes and Anderson Uchôa and Ana Carla Bibiano and Alessandro Garcia},
  booktitle={Proceedings of the 3rd International Workshop on Refactoring (IWoR)},
  pages={9--12},
  year={2019},
abstract={Code refactoring is often performed for improving code structures through code transformations. Many transformations, e.g., extracting or moving a method, are applied for at least partially removing code smells. Each code smell is a symptom of a poor code structure that makes hard to read and change the program. Developers often compose two or more interrelated transformations in conjunction (batch refactoring) rather than applying a single transformation. For instance, developers often compose method extractions with method motions to better organize the features realized by classes. We have recently observed cases of batch refactoring performed along with code review in open source projects. We then noticed that composing batches capable of fully removing code smells is quite challenging. Especially, it requires carefully discussing on how two or more transformations complement one another and what to expect from the batch effect on code smell. This position aims to reason about multiple alternatives to support developers on composing their batches. These alternatives should make it easier to compose batches that remove code smells. For this purpose, we exemplify the role of semi-automated tools in gradually recommending transformations, thereby guiding the batch composition in each alternative.},
url = {https://anderson-uchoa.github.io/publications/FernandesAAA19.pdf},
publisher={IEEE Press}
}



@inproceedings{deMelloARDBAF19,
  title={Investigating the Social Representations of Code Smell Identification: A Preliminary Study},
  author={Rafael de Mello and Anderson Uchôa and Roberto Oliveira and Daniel Tenorio and Baldoino Fonseca and Alessandro Garcia and Fernanda de Mello},
  booktitle={Proceedings of the 12th International Workshop on Cooperative and Human Aspects of Software Engineering (CHASE)},
  pages={53--60},
  year={2019},
abstract={Context: The identification of code smells is one of the most subjective tasks in software engineering. A key reason is the influence of collective aspects of communities working on this task, such as their beliefs regarding the relevance of certain smells. However, collective aspects are often neglected in the context of smell identification. For this purpose, we can use the social representations theory. Social representations comprise the set of values, behaviors and practices of communities associated with a social object, such as the task of identifying smells. Aim: To characterize the social representations behind smell identification. Method: We conducted a preliminary study on the social representations of smell identification by two communities. One community is composed of postgraduate students involved in various investigations related to code smells. The other community is composed of practitioners from industry, with experience in code reviews. We analyzed the associations made by the study participants about smell identification, i.e., what immediately comes to their minds when they think about this task. Results: One of the key findings is that only the community of practitioners strongly associates this task with semantic smells. This finding suggests research directions on code smells may be revisited, as they focus mostly on measurable or structural smells. Considering the novelty of using the social representations theory in software engineering, we also compiled a set of lessons learned. For instance, we observed some key challenges we faced in using the theory. These challenges include: (i) the predominance of associations with technical rather than non-technical concepts, and (ii) the fuzzy definitions of key concepts in our field. Conclusion: We found initial evidence that social representations analysis is a useful instrument to reveal discrepancies and commonalities on how different communities deal with a subjective task. Thus, we expect the experience reported in this paper may encourage and contribute to future studies of social representations in the field.},
url = {https://anderson-uchoa.github.io/publications/deMelloARDBAF19.pdf},
publisher={IEEE Press}
}


@inproceedings{UchoaEBRCGAL19,
  title={On Gamifying an Existing Healthcare System: Method, Conceptual Model and Evaluation},
  author={Anderson Uchôa and Eduardo Fernandes and Baldoino Fonseca and Rafael de Mello and Caio Barbosa and Gabriel Nunes and Alessandro Garcia and Leopoldo Teixeira},
  booktitle={Proceedings of the 1st International Workshop on Software Engineering for Healthcare (SEH)},
  pages={1--8},
  year={2019},
abstract={Software gamification aims at engaging users with software system features. User engagement is promoted via a gamification model that associates game elements (e.g., points) and rules (e.g., ranking policy) with each feature. Gamification has been increasingly explored in certain healthcare domains, such as chronic disease management and physical activity. However, there are currently two important literature gaps. First, certain healthcare domains in which user engagement is even more critical, such as the prevention of mosquito-transmitted diseases, have not systematically explored gamification yet. Healthcare systems of this domain largely depend on the wide engagement of the population, health professionals and authorities. Second, gamification is often introduced in existing systems developed without gamification in mind. Current methods are quite limited to support this task. In this paper, we report our experience while defining, incorporating, and evaluating a gamification model of an existing healthcare system called VazaZika. VazaZika is intended to assist the prevention of mosquito-transmitted diseases in economically emerging countries. We present and discuss the application of a method, adapted from a previous study, to support the design and incorporation of a gamification model in existing systems (VazaZika, in our case). We also present the resulting conceptual model based on 12 game elements and 16 rules. We evaluate this model with 20 users in terms of ease of use and potential for user engagement. Our results suggest that our conceptual model has resulted in an easy-to-use system with the potential of truly engaging users with critical healthcare-related features. We expect the method and its resulting model can be further reused and adapted to similar healthcare systems.},
url = {https://anderson-uchoa.github.io/publications/UchoaEBRCGAL19.pdf},
publisher={IEEE Press}
}


@inproceedings{JulioCA19,
 title={Analyzing the Impact of Inter-smell Relations on Software Maintainability: An Empirical Study with Software Product Lines},
author={Júlio Martins and Carla Bezerra and Anderson Uchôa},
  booktitle={Proceedings of the 15th Brazilian Symposium on Information Systems (SBSI)},
  pages={1--8},
  year={2019},
abstract={A Software Product Line (SPL) consists of a systematic reuse strategy to construct systems with less effort as long as they belong to the same family that shares the same components and belong to the same domain of Marketplace. In this context, to support large-scale reuse, components of a Software Product Line should be easy to maintain. Thus, developers should be more concerned with anomalies known as code smells and more than that, co-occurrences known as Inter-smell deserve to be further studied to verify their real impact on maintainability in SPL. Thus, this paper conducts a study to investigate the impact of Inter-smell occurrences on maintainability in MobileMedia and HealthWatcher SPLs. The results show that the presence of co-occurrences of Inter-smell did not negatively impact the maintenance of MobileMedia and Health Watcher SPLs, unlike results found in other studies in the literature, and even more, our results indicate that the metric Lack of Cohesion of Methods is one of the most important for the maintainability of object-oriented SPLs.},
url = {https://anderson-uchoa.github.io/publications/JulioCA19.pdf},
publisher={ACM}
}


@inproceedings{FernandesALARLDABL19,
  title={VazaZika: A Software Platform for Surveillance and Control of Mosquito-Borne Diseases},
  author={Eduardo Fernandes and Anderson Uchôa and Leonardo Sousa and Anderson Oliveira and Rafael de Mello and Luiz Paulo Barroca and Diogo Carvalho and Alessandro Garcia and Baldoino Fonseca and Leopoldo Teixeira},
  booktitle={16th International Conference on Information Technology: New Generations (ITNG)},
  pages={617--620},
  year={2019},
abstract={Mosquito-borne diseases negatively affect economically emerging countries. Nevertheless, the current public healthcare solutions are insufficient to support disease surveillance and control. The citizen engagement in reporting mosquito breeding sites is hard to achieve but essential in preventing disease outbreaks. This paper introduces the VazaZika platform aimed to support the surveillance and control of mosquito-borne diseases. This platform evolves the VazaDengue legacy platform with gamification. Through game elements and rules, we aim to make enjoyable and challenging to report mosquito breeding sites via VazaZika. Citizens are continuously rewarded as they perform tasks in the platform. They progress in levels that enable new tasks and jump in rankings according to the citizens' location. Citizens can also join teams for engaging with challenges, which helps to develop a sense of belonging and connection against the spread of diseases. This paper reports the process of gamifying VazaDengue, the platform user interface and its conceptual model, aimed to support reuse.},
url = {https://anderson-uchoa.github.io/publications/FernandesALARLDABL19.pdf},
doi = {10.1007/978-3-030-14070-0_89},
publisher={Springer}
}


@inproceedings{FerreiraIEDAAAJFGCBR18,
 author = {Ferreira, Isabella and Fernandes, Eduardo and Cedrim, Diego and Uchôa, Anderson and Bibiano, Ana Carla and Garcia, Alessandro and Correia, João Lucas and Santos, Filipe and Nunes, Gabriel and Barbosa, Caio and Fonseca, Baldoino and de Mello, Rafael},
 title = {The Buggy Side of Code Refactoring: Understanding the Relationship Between Refactorings and Bugs},
 booktitle = {Proceedings of the 40th International Conference on Software Engineering: Companion Proceeedings},
 series = {ICSE '18},
 year = {2018},
 isbn = {978-1-4503-5663-3},
 location = {Gothenburg, Sweden},
 pages = {406--407},
 numpages = {2},
abstract={Code refactoring is widely practiced by software developers. There is an explicit assumption that code refactoring improves the structural quality of a software project, thereby also reducing its bug proneness. However, refactoring is often applied with different purposes in practice. Depending on the complexity of certain refactorings, developers might unconsciously make the source code more susceptible to have bugs. In this paper, we present a longitudinal study of 5 Java open source projects, where 20,689 refactorings, and 1,033 bug reports were analyzed. We found that many bugs are introduced in the refactored code as soon as the first immediate change is made on it. Furthermore, code elements affected by refactorings performed in conjunction with other changes are more prone to have bugs than those affected by pure refactorings.},
 url = {https://anderson-uchoa.github.io/publications/FerreiraEDA18.pdf},
doi = {10.1145/3183440.3195030},
 acmid = {3195030},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {bug proneness, empirical study, refactoring, software maintenance},
}


@article{SousaLRDAPAAA18,
title = "VazaDengue: An information system for preventing and combating mosquito-borne diseases with social networks",
journal = "Information Systems",
volume = "75",
pages = "26 - 42",
year = "2018",
issn = "0306-4379",
doi = "10.1016/j.is.2018.02.003",
url = "https://anderson-uchoa.github.io/publications/SousaLRDAPAAA18.pdf",
author = "Leonardo Sousa and Rafael de Mello and Diego Cedrim and Alessandro Garcia and Paolo Missier and Anderson Uchôa and Anderson Oliveira and Alexander Romanovsky",
keywords = "Dengue, Mosquito, Social media, Surveillance, Tweets",
abstract = "Dengue is a disease transmitted by the Aedes Aegypti mosquito, which also transmits the Zika virus and Chikungunya. Unfortunately, the population of different countries has been suffering from the diseases transmitted by this mosquito. The communities should play an important role in combating and preventing the mosquito-borne diseases. However, due to the limited engagement of the population, new solutions need to be used to strengthen the mosquito surveillance. VazaDengue is one of these solutions, which offers the users a web and mobile platform for preventing and combating mosquito-borne diseases. The system relies on social actions of citizens reporting mosquito breeding sites and dengue cases, in which the reports are made available to the community and health agencies. In order to address the limited population engagement, the system proactively monitors social media network as Twitter to enrich the information provided by the system. It processes the natural language text from the network to classify the tweets according to a set of predefined categories. After the classification, the relevant tweets are provided to the users as reports. In this paper, we describe the VazaDengue features including its ability to harvest and classify tweets. Since the VazaDengue system aims to strengthen the entomological surveillance of the mosquito that transmits Dengue, Zika, and Chikungunya by providing geolocated reports, we present here two studies to evaluate its potential contributions. The first evaluation uses a survey conducted in the Brazilian community of health agents. The goal is to evaluate the relevance of the classified tweets according to the health agents’ perspective. The second study compares the official reports of the 2015–2016 epidemic waves in Brazil with the concentration of mosquito-related tweets found by VazaDengue. The goal is to verify if the concentration of tweets can be used for monitoring the mosquito manifestation in big cities. The results of these two evaluations are encouraging. For instance, we have found that the health agents tend to agree with the relevance of the classified tweets. Moreover, the concentration of tweets is likely to be effective for monitoring big cities. The results of these evaluations are helping us to improve the VazaDengue system further. These improvements will make the VazaDengue system even more useful for combating and preventing the mosquito-borne diseases."
}


@inproceedings{UchoaFBA17,
  title={Do Coupling Metrics Help Characterize Critical Components in Component-based SPL? An Empirical Study},
  author={Uchôa, Anderson and Fernandes, Eduardo and Bibiano, Ana Carla and Garcia, Alessandro},
  booktitle={Proceedings of the 5th Workshop on Software Visualization, Evolution and Maintenance (VEM'17), Fortaleza, Brazil, September 2017.},
  pages={36--43},
  year={2017},
  abstract={In component-based software product lines (SPL), each component has to encapsulate features, restrict data access, and be replaceable. For critical components, with multiple features and dependencies, these criteria are fundamental for flexible product configuration. Previous work assume that coupling metrics help characterize critical components, but we lack empirical evidence for that assumption. By characterizing critical components, we could help developers identify components that require careful maintenance and evolution. This paper relies on five well-known coupling metrics to compose a strategy for characterizing critical components in component-based SPLs. Our results suggest reasonable strategy’s accuracy but the need for using additional metrics.},
url={https://anderson-uchoa.github.io/publications/UchoaFBA17.pdf}	
}


@inproceedings{UchoaMMMC17,
author="Uchôa, Anderson G.
and Bezerra, Carla I. M.
and Machado, Ivan C.
and Monteiro, José Maria
and Andrade, Rossana M. C.",
title="ReMINDER: An Approach to Modeling Non-Functional Properties in Dynamic Software Product Lines",
bookTitle="Proceedings of the 16th International Conference on Software Reuse (ICSR'17), Salvador, Brazil, May 2017.",
year="2017",
publisher="Springer International Publishing",
pages="65--73",
abstract="This paper presents a systematic approach to modeling NFPs in DSPL feature models. In our proposed approach, feature models are annotated with the representation of NFPs, rules for the activation and deactivation of features, constraints between NFPs and features, and context adaptation scenarios. To evaluate the applicability of the proposed approach we carried out an empirical evaluation. The approach yielded good results at identifying NFPs in DSPLs.",
isbn="978-3-319-56856-0",
doi="10.1007/978-3-319-56856-0_5",
url="https://anderson-uchoa.github.io/publications/UchoaMMMC17.pdf"
}

@inproceedings{UchoaPMMC17,
author="Uchôa, Anderson G.
and Lima, Luan P.
and Bezerra, Carla I. M.
and Monteiro, José Maria
and Andrade, Rossana M. C.",
title="DyMMer-NFP: Modeling Non-functional Properties and Multiple Context Adaptation Scenarios in Software Product Lines",
bookTitle="Proceedings of the 16th International Conference on Software Reuse (ICSR'17), Salvador, Brazil, May 2017.",
year="2017",
publisher="Springer International Publishing",
pages="175--183",
abstract="In Software Product Lines (SPLs), the modeling of non-functional properties (NFPs) and context adaptation scenarios are important activities, once they make possible the identification of interdependencies constraints between functional requirements (FR) and NFP, according to a specific adaptation context scenario. However, there are few tools to help domain engineers to represent NFPs and context adaptation scenarios. To deal with this problem, we propose DyMMer-NFP, an extension of the DyMMer tool to support the modeling of NFPs and multiple contextual adaptation scenarios in feature models. DyMMer-NFP uses a catalog with 39 NFPs. Each NFP in this catalog were mapped according to each quality characteristic and sub-characteristics presented in the ISO/IEC 25010 SQuaRE product quality model. To specify the interdependencies between NFPs and features, DyMMer-NFP has used the concept of contribution links. In order to make it easier to evaluate DyMMer-NFP two datasets, called AFFOgaTO and ESPREssO, were made available for free.",
isbn="978-3-319-56856-0",
doi="10.1007/978-3-319-56856-0_12",
url="https://anderson-uchoa.github.io/publications/UchoaPMMC17.pdf"
}

@inproceedings{UchoaM16,
  title={Modelagem de Requisitos Não-Funcionais em Modelos de Features de Linha de Produto de Software Dinâmicas},
  author={Uchôa, Anderson G and Bezerra, Carla IM},
  booktitle={Proceedings of the 3rd Latin-American School on Software Engineering (ELA-ES)},
  pages={73--76},
  note={<font color="red">Best Paper Award!</font>},
  year={2016},
  abstract={This paper proposes a representation of non-functional requirements and context requirements for the feature model of DSPLs. The   representation extends the FODA notation of the feature model. The proposal will be implemented in DyMMer tool that already provides representation of features and context adaptations in a single feature model.},
 url={https://anderson-uchoa.github.io/publications/UchoaM16.pdf}
}


@misc{UchoaR16,
  author       = {Anderson Gonçalves Uchôa}, 
  title        = {ReMINDER: Uma Abordagem para Modelagem de Propriedades Não-Funcionais em Linhas de Produto de Software Dinâmicas},
  note       = {BSc Thesis, Federal University of Ceará (UFC)},
  year         = {2016},
  url       = {https://anderson-uchoa.github.io/publications/UchoaR16.pdf}
}



