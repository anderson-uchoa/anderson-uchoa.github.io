@article{SousaLRDAPAAA18,
title = "VazaDengue: An information system for preventing and combating mosquito-borne diseases with social networks",
journal = "Information Systems",
volume = "75",
pages = "26 - 42",
year = "2018",
issn = "0306-4379",
doi = "10.1016/j.is.2018.02.003",
url = "https://anderson-uchoa.github.io/publications/SousaLRDAPAAA18.pdf",
author = "Leonardo Sousa and Rafael de Mello and Diego Cedrim and Alessandro Garcia and Paolo Missier and Anderson Uchôa and Anderson Oliveira and Alexander Romanovsky",
keywords = "Dengue, Mosquito, Social media, Surveillance, Tweets",
abstract = "Dengue is a disease transmitted by the Aedes Aegypti mosquito, which also transmits the Zika virus and Chikungunya. Unfortunately, the population of different countries has been suffering from the diseases transmitted by this mosquito. The communities should play an important role in combating and preventing the mosquito-borne diseases. However, due to the limited engagement of the population, new solutions need to be used to strengthen the mosquito surveillance. VazaDengue is one of these solutions, which offers the users a web and mobile platform for preventing and combating mosquito-borne diseases. The system relies on social actions of citizens reporting mosquito breeding sites and dengue cases, in which the reports are made available to the community and health agencies. In order to address the limited population engagement, the system proactively monitors social media network as Twitter to enrich the information provided by the system. It processes the natural language text from the network to classify the tweets according to a set of predefined categories. After the classification, the relevant tweets are provided to the users as reports. In this paper, we describe the VazaDengue features including its ability to harvest and classify tweets. Since the VazaDengue system aims to strengthen the entomological surveillance of the mosquito that transmits Dengue, Zika, and Chikungunya by providing geolocated reports, we present here two studies to evaluate its potential contributions. The first evaluation uses a survey conducted in the Brazilian community of health agents. The goal is to evaluate the relevance of the classified tweets according to the health agents’ perspective. The second study compares the official reports of the 2015–2016 epidemic waves in Brazil with the concentration of mosquito-related tweets found by VazaDengue. The goal is to verify if the concentration of tweets can be used for monitoring the mosquito manifestation in big cities. The results of these two evaluations are encouraging. For instance, we have found that the health agents tend to agree with the relevance of the classified tweets. Moreover, the concentration of tweets is likely to be effective for monitoring big cities. The results of these evaluations are helping us to improve the VazaDengue system further. These improvements will make the VazaDengue system even more useful for combating and preventing the mosquito-borne diseases."
}


@inproceedings{FerreiraIEDAAAJFGCBR18,
  title={Poster: The Buggy Side of Code Refactoring: Understanding the Relationship between Refactorings and Bugs},
  author={Isabella Ferreira and Eduardo Fernandes and Diego Cedrim and Anderson Uchôa and Ana Carla Bibiano and Alessandro Garcia and João Lucas Correia and Filipe Santos and Gabriel Nunes and Caio Barbosa and Baldoino Fonseca and Rafael de Mello},
url = "https://anderson-uchoa.github.io/publications/FerreiraEDA18.pdf",
  booktitle={Proceedings of the 40th International Conference on Software Engineering (ICSE'18), Poster Track, Gothenburg, Sweden, May 2018},
  pages={1--8},
  year={2018},
  abstract={Code refactoring is widely practiced by software developers. There is an explicit assumption that code refactoring improves the structural quality of a software project, thereby also reducing its bug proneness. However, refactoring is often applied with different purposes in practice. Depending on the complexity of certain refactorings, developers might unconsciously make the source code more susceptible to have bugs. In this paper, we present a longitudinal study of 5 Java open source projects, where 20,689 refactorings, and 1,033 bug reports were analyzed. We found that many bugs are introduced in the refactored code as soon as the first immediate change is made on it. Furthermore, code elements affected by refactorings performed in conjunction with other changes are more prone to have bugs than those affected by pure refactorings.}
}



@inproceedings{UchoaFBA17,
  title={Do Coupling Metrics Help Characterize Critical Components in Component-based SPL? An Empirical Study},
  author={Uchôa, Anderson and Fernandes, Eduardo and Bibiano, Ana Carla and Garcia, Alessandro},
  booktitle={Proceedings of the 5th Workshop on Software Visualization, Evolution and Maintenance (VEM'17), Fortaleza, Brazil, September 2017.},
  pages={36--43},
  year={2017},
  abstract={In component-based software product lines (SPL), each component has to encapsulate features, restrict data access, and be replaceable. For critical components, with multiple features and dependencies, these criteria are fundamental for flexible product configuration. Previous work assume that coupling metrics help characterize critical components, but we lack empirical evidence for that assumption. By characterizing critical components, we could help developers identify components that require careful maintenance and evolution. This paper relies on five well-known coupling metrics to compose a strategy for characterizing critical components in component-based SPLs. Our results suggest reasonable strategy’s accuracy but the need for using additional metrics.},
url={https://anderson-uchoa.github.io/publications/UchoaFBA17.pdf}	
}


@inproceedings{UchoaMMMC17,
author="Uchôa, Anderson G.
and Bezerra, Carla I. M.
and Machado, Ivan C.
and Monteiro, José Maria
and Andrade, Rossana M. C.",
title="ReMINDER: An Approach to Modeling Non-Functional Properties in Dynamic Software Product Lines",
bookTitle="Proceedings of the 16th International Conference on Software Reuse (ICSR'17), Salvador, Brazil, May 2017.",
year="2017",
publisher="Springer International Publishing",
pages="65--73",
abstract="This paper presents a systematic approach to modeling NFPs in DSPL feature models. In our proposed approach, feature models are annotated with the representation of NFPs, rules for the activation and deactivation of features, constraints between NFPs and features, and context adaptation scenarios. To evaluate the applicability of the proposed approach we carried out an empirical evaluation. The approach yielded good results at identifying NFPs in DSPLs.",
isbn="978-3-319-56856-0",
doi="10.1007/978-3-319-56856-0_5",
url="https://anderson-uchoa.github.io/publications/UchoaMMMC17.pdf"
}

@inproceedings{UchoaPMMC17,
author="Uchôa, Anderson G.
and Lima, Luan P.
and Bezerra, Carla I. M.
and Monteiro, José Maria
and Andrade, Rossana M. C.",
title="DyMMer-NFP: Modeling Non-functional Properties and Multiple Context Adaptation Scenarios in Software Product Lines",
bookTitle="Proceedings of the 16th International Conference on Software Reuse (ICSR'17), Salvador, Brazil, May 2017.",
year="2017",
publisher="Springer International Publishing",
pages="175--183",
abstract="In Software Product Lines (SPLs), the modeling of non-functional properties (NFPs) and context adaptation scenarios are important activities, once they make possible the identification of interdependencies constraints between functional requirements (FR) and NFP, according to a specific adaptation context scenario. However, there are few tools to help domain engineers to represent NFPs and context adaptation scenarios. To deal with this problem, we propose DyMMer-NFP, an extension of the DyMMer tool to support the modeling of NFPs and multiple contextual adaptation scenarios in feature models. DyMMer-NFP uses a catalog with 39 NFPs. Each NFP in this catalog were mapped according to each quality characteristic and sub-characteristics presented in the ISO/IEC 25010 SQuaRE product quality model. To specify the interdependencies between NFPs and features, DyMMer-NFP has used the concept of contribution links. In order to make it easier to evaluate DyMMer-NFP two datasets, called AFFOgaTO and ESPREssO, were made available for free.",
isbn="978-3-319-56856-0",
doi="10.1007/978-3-319-56856-0_12",
url="https://anderson-uchoa.github.io/publications/UchoaPMMC17.pdf"
}

@inproceedings{UchoaM16,
  title={Modelagem de Requisitos Não-Funcionais em Modelos de Features de Linha de Produto de Software Dinâmicas},
  author={Uchôa, Anderson G and Bezerra, Carla IM},
  booktitle={Proceedings of the 3rd Latin-American School on Software Engineering (ELA-ES)},
  pages={73--76},
  note={<font color="red">Best Paper Award!</font>},
  year={2016},
  abstract={This paper proposes a representation of non-functional requirements and context requirements for the feature model of DSPLs. The   representation extends the FODA notation of the feature model. The proposal will be implemented in DyMMer tool that already provides representation of features and context adaptations in a single feature model.},
 url={https://anderson-uchoa.github.io/publications/UchoaM16.pdf}
}

